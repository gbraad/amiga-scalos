#ifndef SQLITE3_INTERFACE_DEF_H
#define SQLITE3_INTERFACE_DEF_H

/*
** This file was machine generated by idltool 52.1.
** Do not edit
*/ 

#ifndef EXEC_TYPES_H
#include <exec/types.h>
#endif
#ifndef EXEC_EXEC_H
#include <exec/exec.h>
#endif
#ifndef EXEC_INTERFACES_H
#include <exec/interfaces.h>
#endif

#ifndef SQLITE3_H
#include <sqlite3.h>
#endif

struct SQLite3IFace
{
	struct InterfaceData Data;

	uint32 APICALL (*Obtain)(struct SQLite3IFace *Self);
	uint32 APICALL (*Release)(struct SQLite3IFace *Self);
	void APICALL (*Expunge)(struct SQLite3IFace *Self);
	struct Interface * APICALL (*Clone)(struct SQLite3IFace *Self);
	LONG APICALL (*SQLite3Close)(struct SQLite3IFace *Self, sqlite3 * db);
	LONG APICALL (*SQLite3Exec)(struct SQLite3IFace *Self, sqlite3 * db, CONST_STRPTR sql, sqlite3_callback xCallback, APTR pArg, STRPTR * errmsg);
	LONG APICALL (*SQLite3Changes)(struct SQLite3IFace *Self, sqlite3 * db);
	LONG APICALL (*SQLite3TotalChanges)(struct SQLite3IFace *Self, sqlite3 * db);
	VOID APICALL (*SQLite3Interrupt)(struct SQLite3IFace *Self, sqlite3 * db);
	LONG APICALL (*SQLite3Complete)(struct SQLite3IFace *Self, CONST_STRPTR sql);
	LONG APICALL (*SQLite3BusyHandler)(struct SQLite3IFace *Self, sqlite3 * db, LONG (*callback)(APTR userdata, LONG l), APTR userdata);
	LONG APICALL (*SQLite3BusyTimeout)(struct SQLite3IFace *Self, sqlite3 * db, LONG ms);
	LONG APICALL (*SQLite3GetTable)(struct SQLite3IFace *Self, sqlite3 * db, CONST_STRPTR sql, STRPTR ** presult, LONG * nrow, LONG * ncolumn, STRPTR * errmsg);
	VOID APICALL (*SQLite3FreeTable)(struct SQLite3IFace *Self, STRPTR * result);
	VOID APICALL (*SQLite3Free)(struct SQLite3IFace *Self, STRPTR z);
	APTR APICALL (*SQLite3Trace)(struct SQLite3IFace *Self, sqlite3 * db, VOID (*xTrace)(APTR p, CONST_STRPTR z), APTR parg);
	VOID APICALL (*SQLite3ProgressHandler)(struct SQLite3IFace *Self, sqlite3 * db, LONG nOps, LONG (*xProgress)(APTR p), APTR pArg);
	APTR APICALL (*SQLite3CommitHook)(struct SQLite3IFace *Self, sqlite3 * db, LONG (*xCallback)(APTR p), APTR pArg);
	LONG APICALL (*SQLite3Open)(struct SQLite3IFace *Self, CONST_STRPTR filename, sqlite3 ** ppDb);
	LONG APICALL (*SQLite3Errcode)(struct SQLite3IFace *Self, sqlite3 * db);
	CONST_STRPTR APICALL (*SQLite3Errmsg)(struct SQLite3IFace *Self, sqlite3 * db);
	LONG APICALL (*SQLite3Prepare)(struct SQLite3IFace *Self, sqlite3 * db, CONST_STRPTR zSql, LONG nBytes, sqlite3_stmt ** ppStmt, CONST_STRPTR * pzTail);
	LONG APICALL (*SQLite3BindBlob)(struct SQLite3IFace *Self, sqlite3_stmt * pStmt, LONG i, CONST_APTR zData, LONG nData, VOID (*xDel)(APTR p));
	LONG APICALL (*SQLite3BindInt)(struct SQLite3IFace *Self, sqlite3_stmt * pStmt, LONG i, LONG iValue);
	LONG APICALL (*SQLite3BindNull)(struct SQLite3IFace *Self, sqlite3_stmt * pStmt, LONG i);
	LONG APICALL (*SQLite3BindText)(struct SQLite3IFace *Self, sqlite3_stmt * pStmt, LONG i, CONST_STRPTR zData, LONG nData, VOID (*xDel)(APTR p));
	LONG APICALL (*SQLite3BindValue)(struct SQLite3IFace *Self, sqlite3_stmt * pStmt, LONG i, CONST sqlite3_value * pVal);
	LONG APICALL (*SQLite3BindParameterCount)(struct SQLite3IFace *Self, sqlite3_stmt * pStmt);
	CONST_STRPTR APICALL (*SQLite3BindParameterName)(struct SQLite3IFace *Self, sqlite3_stmt * pStmt, LONG i);
	LONG APICALL (*SQLite3BindParameterIndex)(struct SQLite3IFace *Self, sqlite3_stmt * pStmt, CONST_STRPTR zName);
	LONG APICALL (*SQLite3ClearBindings)(struct SQLite3IFace *Self, sqlite3_stmt * pStmt);
	LONG APICALL (*SQLite3ColumnCount)(struct SQLite3IFace *Self, sqlite3_stmt * pStmt);
	CONST_STRPTR APICALL (*SQLite3ColumnName)(struct SQLite3IFace *Self, sqlite3_stmt * pStmt, LONG i);
	CONST_STRPTR APICALL (*SQLite3ColumnDecltype)(struct SQLite3IFace *Self, sqlite3_stmt * pStmt, LONG i);
	LONG APICALL (*SQLite3Step)(struct SQLite3IFace *Self, sqlite3_stmt * pStmt);
	LONG APICALL (*SQLite3DataCount)(struct SQLite3IFace *Self, sqlite3_stmt * pStmt);
	CONST_APTR APICALL (*SQLite3ColumnBlob)(struct SQLite3IFace *Self, sqlite3_stmt * pStmt, LONG iCol);
	LONG APICALL (*SQLite3ColumnBytes)(struct SQLite3IFace *Self, sqlite3_stmt * pStmt, LONG iCol);
	LONG APICALL (*SQLite3ColumnInt)(struct SQLite3IFace *Self, sqlite3_stmt * pStmt, LONG iCol);
	CONST_STRPTR APICALL (*SQLite3ColumnText)(struct SQLite3IFace *Self, sqlite3_stmt * pStmt, LONG iCol);
	LONG APICALL (*SQLite3ColumnType)(struct SQLite3IFace *Self, sqlite3_stmt * pStmt, LONG iCol);
	LONG APICALL (*SQLite3Finalize)(struct SQLite3IFace *Self, sqlite3_stmt * pStmt);
	LONG APICALL (*SQLite3Reset)(struct SQLite3IFace *Self, sqlite3_stmt * pStmt);
	LONG APICALL (*SQLite3AggregateCount)(struct SQLite3IFace *Self, sqlite3_context * pCtx);
	CONST_APTR APICALL (*SQLite3ValueBlob)(struct SQLite3IFace *Self, sqlite3_value * pVal);
	LONG APICALL (*SQLite3ValueBytes)(struct SQLite3IFace *Self, sqlite3_value * pVal);
	LONG APICALL (*SQLite3ValueInt)(struct SQLite3IFace *Self, sqlite3_value * pVal);
	CONST_STRPTR APICALL (*SQLite3ValueText)(struct SQLite3IFace *Self, sqlite3_value * pVal);
	LONG APICALL (*SQLite3ValueType)(struct SQLite3IFace *Self, sqlite3_value * pVal);
	APTR APICALL (*SQLite3Aggregate_context)(struct SQLite3IFace *Self, sqlite3_context * pCtx, LONG nBytes);
	APTR APICALL (*SQLite3UserData)(struct SQLite3IFace *Self, sqlite3_context * pCtx);
	APTR APICALL (*SQLite3GetAuxdata)(struct SQLite3IFace *Self, sqlite3_context * pCtx, LONG iArg);
	VOID APICALL (*SQLite3SetAuxdata)(struct SQLite3IFace *Self, sqlite3_context * pCtx, LONG iARg, APTR pAux, VOID (*xDelete)(APTR p));
	VOID APICALL (*SQLite3ResultBlob)(struct SQLite3IFace *Self, sqlite3_context * pCtx, CONST_APTR z, LONG n, VOID (*xDelete)(APTR p));
	VOID APICALL (*SQLite3ResultError)(struct SQLite3IFace *Self, sqlite3_context * pCtx, CONST_STRPTR z, LONG n);
	VOID APICALL (*SQLite3ResultInt)(struct SQLite3IFace *Self, sqlite3_context * pCtx, LONG iVal);
	VOID APICALL (*SQLite3ResultNull)(struct SQLite3IFace *Self, sqlite3_context * pCtx);
	VOID APICALL (*SQLite3ResultText)(struct SQLite3IFace *Self, sqlite3_context * pCtx, CONST_STRPTR z, LONG n, VOID (*xDelete)(APTR p));
	VOID APICALL (*SQLite3ResultValue)(struct SQLite3IFace *Self, sqlite3_context * pCtx, sqlite3_value * pValue);
	LONG APICALL (*SQLite3CreateCollation)(struct SQLite3IFace *Self, sqlite3 * db, CONST_STRPTR zName, LONG eTextRep, APTR pCtx, LONG (*xCompare)(APTR p, LONG i, CONST_APTR p2, LONG j, CONST_APTR p3));
	LONG APICALL (*SQLite3CollationNeeded)(struct SQLite3IFace *Self, sqlite3 * db, APTR pCollNeededArg, VOID (*xCollNeeded)(APTR p, sqlite3 *dv, LONG eTextRep, CONST_STRPTR z));
	LONG APICALL (*SQLite3Sleep)(struct SQLite3IFace *Self, LONG ms);
	LONG APICALL (*SQLite3Expired)(struct SQLite3IFace *Self, sqlite3_stmt * pStmt);
	LONG APICALL (*SQLite3TransferBindings)(struct SQLite3IFace *Self, sqlite3_stmt * pFromStmt, sqlite3_stmt * pToStmt);
	LONG APICALL (*SQLite3GlobalRecover)(struct SQLite3IFace *Self);
	LONG APICALL (*SQLite3GetAutocommit)(struct SQLite3IFace *Self, sqlite3 * db);
	sqlite3 * APICALL (*SQLite3DbHandle)(struct SQLite3IFace *Self, sqlite3_stmt * pStmt);
	APTR APICALL (*SQLite3RollbackHook)(struct SQLite3IFace *Self, sqlite3 * db, VOID (*callback)(APTR pUserData), APTR pUserData);
	LONG APICALL (*SQLite3EnableSharedCache)(struct SQLite3IFace *Self, BOOL enable);
	LONG APICALL (*SQLite3ReleaseMemory)(struct SQLite3IFace *Self, LONG bytesCount);
	VOID APICALL (*SQLite3SoftHeapLimit)(struct SQLite3IFace *Self, LONG maxBytes);
	VOID APICALL (*SQLite3ThreadCleanup)(struct SQLite3IFace *Self);
	LONG APICALL (*SQLite3PrepareV2)(struct SQLite3IFace *Self, sqlite3 * db, CONST_STRPTR zSql, LONG nBytes, sqlite3_stmt ** ppStmt, CONST_STRPTR * pzTail);
	LONG APICALL (*SQLite3CreateFunction)(struct SQLite3IFace *Self, sqlite3 * db, CONST_STRPTR zFunctionName, LONG nArg, LONG eTextRep, APTR userdata, VOID (*xFunc)(sqlite3_context *pCtx, LONG i, sqlite3_value **pVal), VOID (*xStep)(sqlite3_context *pCtx, LONG i, sqlite3_value **pVal), VOID (*xFinal)(sqlite3_context *pCtx));
	LONG APICALL (*SQLite3CreateModule)(struct SQLite3IFace *Self, sqlite3 * db, CONST_STRPTR zName, CONST sqlite3_module * methods, APTR clientData);
	LONG APICALL (*SQLite3DeclareVtab)(struct SQLite3IFace *Self, sqlite3 * db, CONST_STRPTR zCreateTable);
	LONG APICALL (*SQLite3OverloadFunction)(struct SQLite3IFace *Self, sqlite3 * db, CONST_STRPTR zFuncName, LONG nArg);
	LONG APICALL (*SQLite3BlobOpen)(struct SQLite3IFace *Self, sqlite3 * db, CONST_STRPTR zDb, CONST_STRPTR zTable, CONST_STRPTR zColumn, LONG iRow, LONG flags, sqlite3_blob ** ppBlob);
	LONG APICALL (*SQLite3BlobClose)(struct SQLite3IFace *Self, sqlite3_blob * blob);
	LONG APICALL (*SQLite3BlobBytes)(struct SQLite3IFace *Self, sqlite3_blob * blob);
	LONG APICALL (*SQLite3BlobRead)(struct SQLite3IFace *Self, sqlite3_blob * blob, APTR z, LONG n, LONG iOffset);
	LONG APICALL (*SQLite3BlobWrite)(struct SQLite3IFace *Self, sqlite3_blob * blob, CONST_APTR z, LONG n, LONG iOffset);
	LONG APICALL (*SQLite3ExtendedResultCodes)(struct SQLite3IFace *Self, sqlite3 * db, LONG onoff);
	LONG APICALL (*SQLite3BindZeroBlob)(struct SQLite3IFace *Self, sqlite3_stmt * pStmt, LONG i, LONG n);
	CONST_STRPTR APICALL (*SQLite3ColumnDatabaseName)(struct SQLite3IFace *Self, sqlite3_stmt * stmt, LONG n);
	CONST_STRPTR APICALL (*SQLite3ColumnTableName)(struct SQLite3IFace *Self, sqlite3_stmt * stmt, LONG n);
	CONST_STRPTR APICALL (*SQLite3ColumnOriginName)(struct SQLite3IFace *Self, sqlite3_stmt * stmt, LONG n);
	sqlite3_value * APICALL (*SQLite3ColumnValue)(struct SQLite3IFace *Self, sqlite3_stmt * pStmt, LONG iCol);
	LONG APICALL (*SQLite3CreateCollationV2)(struct SQLite3IFace *Self, sqlite3 * db, CONST_STRPTR zName, LONG eTextRep, APTR pCtx, LONG (*xCompare)(APTR p, LONG i, CONST_APTR p2, LONG j, CONST_APTR p3), VOID (*xDestroy)(APTR));
	CONST_STRPTR APICALL (*SQLite3LibVersion)(struct SQLite3IFace *Self);
	LONG APICALL (*SQLite3LibversionNumber)(struct SQLite3IFace *Self);
	VOID APICALL (*SQLite3ResultErrorToobig)(struct SQLite3IFace *Self, sqlite3_context * pCtx);
	VOID APICALL (*SQLite3ResultZeroBlob)(struct SQLite3IFace *Self, sqlite3_context * pCtx, LONG n);
	LONG APICALL (*SQLite3ValueNumericType)(struct SQLite3IFace *Self, sqlite3_value * pVal);
	LONG APICALL (*SQLite3ConfigV)(struct SQLite3IFace *Self, LONG op, APTR ap);
	LONG APICALL (*SQLite3Config)(struct SQLite3IFace *Self, LONG op, ...);
	LONG APICALL (*SQLlite3DbConfigV)(struct SQLite3IFace *Self, sqlite3 * db, LONG op, APTR ap);
	LONG APICALL (*SQLlite3DbConfig)(struct SQLite3IFace *Self, sqlite3 * db, LONG op, ...);
	sqlite3_vfs * APICALL (*SQLite3VfsFind)(struct SQLite3IFace *Self, CONST_STRPTR zVfsName);
	LONG APICALL (*SQLite3VfsRegister)(struct SQLite3IFace *Self, sqlite3_vfs * vfs, LONG makeDflt);
	LONG APICALL (*SQLite3VfsUnregister)(struct SQLite3IFace *Self, sqlite3_vfs * vfs);
	LONG APICALL (*SQLite3FileControl)(struct SQLite3IFace *Self, sqlite3 * db, CONST_STRPTR zDbName, LONG op, void * arg);
	LONG APICALL (*SQLite3Status)(struct SQLite3IFace *Self, LONG op, LONG * pCurrent, LONG * pHighwater, LONG resetFlag);
	LONG APICALL (*SQLite3DbStatus)(struct SQLite3IFace *Self, sqlite3 * db, LONG op, LONG * pCur, LONG * pHiwtr, LONG resetFlg);
};

#endif /* SQLITE3_INTERFACE_DEF_H */
