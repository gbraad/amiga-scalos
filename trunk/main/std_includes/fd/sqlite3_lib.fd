##base _SQLite3Base
##bias 30
##public
SQLite3Close(db)(a0)
SQLite3Exec(db,sql,xCallback,pArg,errmsg)(a0/a1/a2/a3,d0)
*sqlite_int64 SQLite3_last_insert_rowid(sqlite3 *db) (a0)
SQLite3Changes(db)(a0)
SQLite3TotalChanges(db)(a0)
SQLite3Interrupt(db)(a0)
SQLite3Complete(sql)(a0)
SQLite3BusyHandler(db,callback,userdata)(a0/a1/a2)
SQLite3BusyTimeout(db,ms)(a0,d0)
SQLite3GetTable(db,sql,presult,nrow,ncolumn,errmsg)(a0/a1/a2/a3,d0/d1)
SQLite3FreeTable(result)(a0)
*==varargs
*STRPTR SQLite3Mprintf(CONST_STRPTR fmt, ...) (a0,a1)
*STRPTR SQLite3Vmprintf(CONST_STRPTR fmt, va_list args) (a0,a1)
SQLite3Free(z)(a0)
*==varargs
*STRPTR SQLite3Snprintf(LONG maxlen, STRPTR zbuf, CONST_STRPTR fmt, ...) (d0,a0,a1)
SQLite3Trace(db,xTrace,parg)(a0/a1/a2)
*APTR SQLite3Profile(sqlite3 *db, VOID (*xProfile)(APTR ü, CONST_STRPTR z, sqlite_uint64), APTR) (a0,a1,a2)
SQLite3ProgressHandler(db,nOps,xProgress,pArg)(a0,d0/a1/a2)
SQLite3CommitHook(db,xCallback,pArg)(a0/a1/a2)
SQLite3Open(filename,ppDb)(a0/a1)
SQLite3Errcode(db)(a0)
SQLite3Errmsg(db)(a0)
SQLite3Prepare(db,zSql,nBytes,ppStmt,pzTail)(a0/a1,d0/a2/a3)
SQLite3BindBlob(pStmt,i,zData,nData,xDel)(a0,d0/a1,d1/a2)
*LONG SQLite3BindDouble(sqlite3_stmt *pStmt, LONG i, double) (a0,d0,?)
SQLite3BindInt(pStmt,i,iValue)(a0,d0/d1)
*LONG SQLite3BindInt64(sqlite3_stmt *pStmt, LONG i, sqlite_int64 iValue) (a0,d0,?)
SQLite3BindNull(pStmt,i)(a0,d0)
SQLite3BindText(pStmt,i,zData,nData,xDel)(a0,d0/a1,d1/a2)
SQLite3BindValue(pStmt,i,pVal)(a0,d0/a1)
SQLite3BindParameterCount(pStmt)(a0)
SQLite3BindParameterName(pStmt,i)(a0,d0)
SQLite3BindParameterIndex(pStmt,zName)(a0/a1)
SQLite3ClearBindings(pStmt)(a0)
SQLite3ColumnCount(pStmt)(a0)
SQLite3ColumnName(pStmt,i)(a0,d0)
SQLite3ColumnDecltype(pStmt,i)(a0,d0)
SQLite3Step(pStmt)(a0)
SQLite3DataCount(pStmt)(a0)
SQLite3ColumnBlob(pStmt,iCol)(a0,d0)
SQLite3ColumnBytes(pStmt,iCol)(a0,d0)
*double SQLite3ColumnDouble(sqlite3_stmt *pStmt, LONG iCol) (a0,d0)
SQLite3ColumnInt(pStmt,iCol)(a0,d0)
*sqlite_inz64 SQLite3ColumnInt64(sqlite3_stmt *pStmt, LONG iCol) (a0,d0)
SQLite3ColumnText(pStmt,iCol)(a0,d0)
SQLite3ColumnType(pStmt,iCol)(a0,d0)
SQLite3Finalize(pStmt)(a0)
SQLite3Reset(pStmt)(a0)
*LONG SQLite3CreateFunction(sqlite3 *db, CONST_STRPTR zFunctionName, LONG nArg, LONG eTextRep, APTR userdata, VOID (*xFunc)(sqlite3_context *pCtx, LONG i, sqlite3_value **pVal), VOID (*xStep)(sqlite3_context *pCtx, LONG i, sqlite3_value **pVal), VOID (*xFinal)(sqlite3_context *pCtx)) (a0,a1,d0,d1,a2,a3,d2,d3)
SQLite3AggregateCount(pCtx)(a0)
SQLite3ValueBlob(pVal)(a0)
SQLite3ValueBytes(pVal)(a0)
*double SQLite3ValueDouble(sqlite3_value *pVal) (a0)
SQLite3ValueInt(pVal)(a0)
*sqlite_inz64 SQLite3ValueInt64(sqlite3_value *pVal) (a0)
SQLite3ValueText(pVal)(a0)
SQLite3ValueType(pVal)(a0)
SQLite3Aggregate_context(pCtx,nBytes)(a0,d0)
SQLite3UserData(pCtx)(a0)
SQLite3GetAuxdata(pCtx,iArg)(a0,d0)
SQLite3SetAuxdata(pCtx,iARg,pAux,xDelete)(a0,d0/a1/a2)
SQLite3ResultBlob(pCtx,z,n,xDelete)(a0/a1,d0/a2)
*VOID SQLite3ResultDouble(sqlite3_context *pCtx, double rVal) (a0,?)
SQLite3ResultError(pCtx,z,n)(a0/a1,d0)
SQLite3ResultInt(pCtx,iVal)(a0,d0)
*VOID SQLite3ResultInt64(sqlite3_context *pCtx, sqlite_int64 iVal) (a0,?)
SQLite3ResultNull(pCtx)(a0)
SQLite3ResultText(pCtx,z,n,xDelete)(a0/a1,d0/a2)
SQLite3ResultValue(pCtx,pValue)(a0/a1)
SQLite3CreateCollation(db,zName,eTextRep,pCtx,xCompare)(a0/a1,d0/a2/a3)
SQLite3CollationNeeded(db,pCollNeededArg,xCollNeeded)(a0,d0/a1)
SQLite3Sleep(ms)(d0)
SQLite3Expired(pStmt)(a0)
SQLite3TransferBindings(pFromStmt,pToStmt)(a0/a1)
SQLite3GlobalRecover()()
SQLite3GetAutocommit(db)(a0)
SQLite3DbHandle(pStmt)(a0)
*--- functions in V41 or higher (Transitional Release 3.2) ---
*APTR SQLite3UpdateHook(sqlite3 *db, VOID (*callback)(APTR pUserData,LONG type, CONST_STRPTR dbName, CONST_STRPTR tableName, sqlite_int64 rowId), APTR pUserData) (a0,a1,a2)
SQLite3RollbackHook(db,callback,pUserData)(a0/a1/a2)
SQLite3EnableSharedCache(enable)(d0)
SQLite3ReleaseMemory(bytesCount)(d0)
SQLite3SoftHeapLimit(maxBytes)(d0)
SQLite3ThreadCleanup()()
*LONG SQLite3TableColumnMetadata(sqlite3 *db, CONST_STRPTR zDbName, CONST_STRPTR zTableName, CONST_STRPTR zColumnName, CONST_STRPTR *pzDataType, CONST_STRPTR *pzCollSeq, LONG *pNotNull, LONG *pPrimaryKey, LONG *pAutoinc) (a0,a1,a2,a3,d0,d1,d2,d3,d4)
##end
