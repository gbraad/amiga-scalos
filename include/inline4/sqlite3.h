#ifndef INLINE4_SQLITE3_H
#define INLINE4_SQLITE3_H

/*
** This file was auto generated by idltool 52.1.
**
** It provides compatibility to OS3 style library
** calls by substituting functions.
**
** Do not edit manually.
*/ 

#ifndef EXEC_TYPES_H
#include <exec/types.h>
#endif
#ifndef EXEC_EXEC_H
#include <exec/exec.h>
#endif
#ifndef EXEC_INTERFACES_H
#include <exec/interfaces.h>
#endif

#ifndef SQLITE3_H
#include <sqlite3.h>
#endif
#include <interfaces/sqlite3.h>

/* Inline macros for Interface "main" */
#define SQLite3Close(db) ISQLite3->SQLite3Close((db)) 
#define SQLite3Exec(db, sql, xCallback, pArg, errmsg) ISQLite3->SQLite3Exec((db), (sql), (xCallback), (pArg), (errmsg)) 
#define SQLite3Changes(db) ISQLite3->SQLite3Changes((db)) 
#define SQLite3TotalChanges(db) ISQLite3->SQLite3TotalChanges((db)) 
#define SQLite3Interrupt(db) ISQLite3->SQLite3Interrupt((db)) 
#define SQLite3Complete(sql) ISQLite3->SQLite3Complete((sql)) 
#define SQLite3BusyHandler(db, callback, userdata) ISQLite3->SQLite3BusyHandler((db), (callback), (userdata)) 
#define SQLite3BusyTimeout(db, ms) ISQLite3->SQLite3BusyTimeout((db), (ms)) 
#define SQLite3GetTable(db, sql, presult, nrow, ncolumn, errmsg) ISQLite3->SQLite3GetTable((db), (sql), (presult), (nrow), (ncolumn), (errmsg)) 
#define SQLite3FreeTable(result) ISQLite3->SQLite3FreeTable((result)) 
#define SQLite3Free(z) ISQLite3->SQLite3Free((z)) 
#define SQLite3Trace(db, xTrace, parg) ISQLite3->SQLite3Trace((db), (xTrace), (parg)) 
#define SQLite3ProgressHandler(db, nOps, xProgress, pArg) ISQLite3->SQLite3ProgressHandler((db), (nOps), (xProgress), (pArg)) 
#define SQLite3CommitHook(db, xCallback, pArg) ISQLite3->SQLite3CommitHook((db), (xCallback), (pArg)) 
#define SQLite3Open(filename, ppDb) ISQLite3->SQLite3Open((filename), (ppDb)) 
#define SQLite3Errcode(db) ISQLite3->SQLite3Errcode((db)) 
#define SQLite3Errmsg(db) ISQLite3->SQLite3Errmsg((db)) 
#define SQLite3Prepare(db, zSql, nBytes, ppStmt, pzTail) ISQLite3->SQLite3Prepare((db), (zSql), (nBytes), (ppStmt), (pzTail)) 
#define SQLite3BindBlob(pStmt, i, zData, nData, xDel) ISQLite3->SQLite3BindBlob((pStmt), (i), (zData), (nData), (xDel)) 
#define SQLite3BindInt(pStmt, i, iValue) ISQLite3->SQLite3BindInt((pStmt), (i), (iValue)) 
#define SQLite3BindNull(pStmt, i) ISQLite3->SQLite3BindNull((pStmt), (i)) 
#define SQLite3BindText(pStmt, i, zData, nData, xDel) ISQLite3->SQLite3BindText((pStmt), (i), (zData), (nData), (xDel)) 
#define SQLite3BindValue(pStmt, i, pVal) ISQLite3->SQLite3BindValue((pStmt), (i), (pVal)) 
#define SQLite3BindParameterCount(pStmt) ISQLite3->SQLite3BindParameterCount((pStmt)) 
#define SQLite3BindParameterName(pStmt, i) ISQLite3->SQLite3BindParameterName((pStmt), (i)) 
#define SQLite3BindParameterIndex(pStmt, zName) ISQLite3->SQLite3BindParameterIndex((pStmt), (zName)) 
#define SQLite3ClearBindings(pStmt) ISQLite3->SQLite3ClearBindings((pStmt)) 
#define SQLite3ColumnCount(pStmt) ISQLite3->SQLite3ColumnCount((pStmt)) 
#define SQLite3ColumnName(pStmt, i) ISQLite3->SQLite3ColumnName((pStmt), (i)) 
#define SQLite3ColumnDecltype(pStmt, i) ISQLite3->SQLite3ColumnDecltype((pStmt), (i)) 
#define SQLite3Step(pStmt) ISQLite3->SQLite3Step((pStmt)) 
#define SQLite3DataCount(pStmt) ISQLite3->SQLite3DataCount((pStmt)) 
#define SQLite3ColumnBlob(pStmt, iCol) ISQLite3->SQLite3ColumnBlob((pStmt), (iCol)) 
#define SQLite3ColumnBytes(pStmt, iCol) ISQLite3->SQLite3ColumnBytes((pStmt), (iCol)) 
#define SQLite3ColumnInt(pStmt, iCol) ISQLite3->SQLite3ColumnInt((pStmt), (iCol)) 
#define SQLite3ColumnText(pStmt, iCol) ISQLite3->SQLite3ColumnText((pStmt), (iCol)) 
#define SQLite3ColumnType(pStmt, iCol) ISQLite3->SQLite3ColumnType((pStmt), (iCol)) 
#define SQLite3Finalize(pStmt) ISQLite3->SQLite3Finalize((pStmt)) 
#define SQLite3Reset(pStmt) ISQLite3->SQLite3Reset((pStmt)) 
#define SQLite3AggregateCount(pCtx) ISQLite3->SQLite3AggregateCount((pCtx)) 
#define SQLite3ValueBlob(pVal) ISQLite3->SQLite3ValueBlob((pVal)) 
#define SQLite3ValueBytes(pVal) ISQLite3->SQLite3ValueBytes((pVal)) 
#define SQLite3ValueInt(pVal) ISQLite3->SQLite3ValueInt((pVal)) 
#define SQLite3ValueText(pVal) ISQLite3->SQLite3ValueText((pVal)) 
#define SQLite3ValueType(pVal) ISQLite3->SQLite3ValueType((pVal)) 
#define SQLite3Aggregate_context(pCtx, nBytes) ISQLite3->SQLite3Aggregate_context((pCtx), (nBytes)) 
#define SQLite3UserData(pCtx) ISQLite3->SQLite3UserData((pCtx)) 
#define SQLite3GetAuxdata(pCtx, iArg) ISQLite3->SQLite3GetAuxdata((pCtx), (iArg)) 
#define SQLite3SetAuxdata(pCtx, iARg, pAux, xDelete) ISQLite3->SQLite3SetAuxdata((pCtx), (iARg), (pAux), (xDelete)) 
#define SQLite3ResultBlob(pCtx, z, n, xDelete) ISQLite3->SQLite3ResultBlob((pCtx), (z), (n), (xDelete)) 
#define SQLite3ResultError(pCtx, z, n) ISQLite3->SQLite3ResultError((pCtx), (z), (n)) 
#define SQLite3ResultInt(pCtx, iVal) ISQLite3->SQLite3ResultInt((pCtx), (iVal)) 
#define SQLite3ResultNull(pCtx) ISQLite3->SQLite3ResultNull((pCtx)) 
#define SQLite3ResultText(pCtx, z, n, xDelete) ISQLite3->SQLite3ResultText((pCtx), (z), (n), (xDelete)) 
#define SQLite3ResultValue(pCtx, pValue) ISQLite3->SQLite3ResultValue((pCtx), (pValue)) 
#define SQLite3CreateCollation(db, zName, eTextRep, pCtx, xCompare) ISQLite3->SQLite3CreateCollation((db), (zName), (eTextRep), (pCtx), (xCompare)) 
#define SQLite3CollationNeeded(db, pCollNeededArg, xCollNeeded) ISQLite3->SQLite3CollationNeeded((db), (pCollNeededArg), (xCollNeeded)) 
#define SQLite3Sleep(ms) ISQLite3->SQLite3Sleep((ms)) 
#define SQLite3Expired(pStmt) ISQLite3->SQLite3Expired((pStmt)) 
#define SQLite3TransferBindings(pFromStmt, pToStmt) ISQLite3->SQLite3TransferBindings((pFromStmt), (pToStmt)) 
#define SQLite3GlobalRecover() ISQLite3->SQLite3GlobalRecover() 
#define SQLite3GetAutocommit(db) ISQLite3->SQLite3GetAutocommit((db)) 
#define SQLite3DbHandle(pStmt) ISQLite3->SQLite3DbHandle((pStmt)) 
#define SQLite3RollbackHook(db, callback, pUserData) ISQLite3->SQLite3RollbackHook((db), (callback), (pUserData)) 
#define SQLite3EnableSharedCache(enable) ISQLite3->SQLite3EnableSharedCache((enable)) 
#define SQLite3ReleaseMemory(bytesCount) ISQLite3->SQLite3ReleaseMemory((bytesCount)) 
#define SQLite3SoftHeapLimit(maxBytes) ISQLite3->SQLite3SoftHeapLimit((maxBytes)) 
#define SQLite3ThreadCleanup() ISQLite3->SQLite3ThreadCleanup() 
#define SQLite3PrepareV2(db, zSql, nBytes, ppStmt, pzTail) ISQLite3->SQLite3PrepareV2((db), (zSql), (nBytes), (ppStmt), (pzTail)) 
#define SQLite3CreateFunction(db, zFunctionName, nArg, eTextRep, userdata, xFunc, xStep, xFinal) ISQLite3->SQLite3CreateFunction((db), (zFunctionName), (nArg), (eTextRep), (userdata), (xFunc), (xStep), (xFinal)) 
#define SQLite3CreateModule(db, zName, methods, clientData) ISQLite3->SQLite3CreateModule((db), (zName), (methods), (clientData)) 
#define SQLite3DeclareVtab(db, zCreateTable) ISQLite3->SQLite3DeclareVtab((db), (zCreateTable)) 
#define SQLite3OverloadFunction(db, zFuncName, nArg) ISQLite3->SQLite3OverloadFunction((db), (zFuncName), (nArg)) 
#define SQLite3BlobOpen(db, zDb, zTable, zColumn, iRow, flags, ppBlob) ISQLite3->SQLite3BlobOpen((db), (zDb), (zTable), (zColumn), (iRow), (flags), (ppBlob)) 
#define SQLite3BlobClose(blob) ISQLite3->SQLite3BlobClose((blob)) 
#define SQLite3BlobBytes(blob) ISQLite3->SQLite3BlobBytes((blob)) 
#define SQLite3BlobRead(blob, z, n, iOffset) ISQLite3->SQLite3BlobRead((blob), (z), (n), (iOffset)) 
#define SQLite3BlobWrite(blob, z, n, iOffset) ISQLite3->SQLite3BlobWrite((blob), (z), (n), (iOffset)) 
#define SQLite3ExtendedResultCodes(db, onoff) ISQLite3->SQLite3ExtendedResultCodes((db), (onoff)) 
#define SQLite3BindZeroBlob(pStmt, i, n) ISQLite3->SQLite3BindZeroBlob((pStmt), (i), (n)) 
#define SQLite3ColumnDatabaseName(stmt, n) ISQLite3->SQLite3ColumnDatabaseName((stmt), (n)) 
#define SQLite3ColumnTableName(stmt, n) ISQLite3->SQLite3ColumnTableName((stmt), (n)) 
#define SQLite3ColumnOriginName(stmt, n) ISQLite3->SQLite3ColumnOriginName((stmt), (n)) 
#define SQLite3ColumnValue(pStmt, iCol) ISQLite3->SQLite3ColumnValue((pStmt), (iCol)) 
#define SQLite3CreateCollationV2(db, zName, eTextRep, pCtx, xCompare, xDestroy) ISQLite3->SQLite3CreateCollationV2((db), (zName), (eTextRep), (pCtx), (xCompare), (xDestroy)) 
#define SQLite3LibVersion() ISQLite3->SQLite3LibVersion() 
#define SQLite3LibversionNumber() ISQLite3->SQLite3LibversionNumber() 
#define SQLite3ResultErrorToobig(pCtx) ISQLite3->SQLite3ResultErrorToobig((pCtx)) 
#define SQLite3ResultZeroBlob(pCtx, n) ISQLite3->SQLite3ResultZeroBlob((pCtx), (n)) 
#define SQLite3ValueNumericType(pVal) ISQLite3->SQLite3ValueNumericType((pVal)) 
#define SQLite3ConfigV(op, ap) ISQLite3->SQLite3ConfigV((op), (ap)) 
#if (defined(__STDC_VERSION__) && __STDC_VERSION__ >= 199901L) || (__GNUC__ >= 3)
#define SQLite3Config(...) ISQLite3->SQLite3Config(__VA_ARGS__) 
#elif (__GNUC__ == 2 && __GNUC_MINOR__ >= 95)
#define SQLite3Config(vargs...) ISQLite3->SQLite3Config(## vargs) 
#endif
#define SQLlite3DbConfigV(db, op, ap) ISQLite3->SQLlite3DbConfigV((db), (op), (ap)) 
#if (defined(__STDC_VERSION__) && __STDC_VERSION__ >= 199901L) || (__GNUC__ >= 3)
#define SQLlite3DbConfig(db, ...) ISQLite3->SQLlite3DbConfig((db), __VA_ARGS__) 
#elif (__GNUC__ == 2 && __GNUC_MINOR__ >= 95)
#define SQLlite3DbConfig(db, vargs...) ISQLite3->SQLlite3DbConfig(db, ## vargs) 
#endif
#define SQLite3VfsFind(zVfsName) ISQLite3->SQLite3VfsFind((zVfsName)) 
#define SQLite3VfsRegister(vfs, makeDflt) ISQLite3->SQLite3VfsRegister((vfs), (makeDflt)) 
#define SQLite3VfsUnregister(vfs) ISQLite3->SQLite3VfsUnregister((vfs)) 
#define SQLite3FileControl(db, zDbName, op, arg) ISQLite3->SQLite3FileControl((db), (zDbName), (op), (arg)) 
#define SQLite3Status(op, pCurrent, pHighwater, resetFlag) ISQLite3->SQLite3Status((op), (pCurrent), (pHighwater), (resetFlag)) 
#define SQLite3DbStatus(db, op, pCur, pHiwtr, resetFlg) ISQLite3->SQLite3DbStatus((db), (op), (pCur), (pHiwtr), (resetFlg)) 

#endif /* INLINE4_SQLITE3_H */
