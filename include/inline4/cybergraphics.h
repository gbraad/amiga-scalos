#ifndef INLINE4_CYBERGRAPHICS_H
#define INLINE4_CYBERGRAPHICS_H

/*
** This file was auto generated by idltool 52.1.
**
** It provides compatibility to OS3 style library
** calls by substituting functions.
**
** Do not edit manually.
*/ 

#ifndef EXEC_TYPES_H
#include <exec/types.h>
#endif
#ifndef EXEC_EXEC_H
#include <exec/exec.h>
#endif
#ifndef EXEC_INTERFACES_H
#include <exec/interfaces.h>
#endif

#ifndef UTILITY_TAGITEM_H
#include <utility/tagitem.h>
#endif
#include <interfaces/cybergraphics.h>

/* Inline macros for Interface "main" */
#define IsCyberModeID(displayID) ICyberGfx->IsCyberModeID((displayID)) 
#define BestCModeIDTagList(bestModeIDTags) ICyberGfx->BestCModeIDTagList((bestModeIDTags)) 
#if (defined(__STDC_VERSION__) && __STDC_VERSION__ >= 199901L) || (__GNUC__ >= 3)
#define BestCModeIDTags(...) ICyberGfx->BestCModeIDTags(__VA_ARGS__) 
#elif (__GNUC__ == 2 && __GNUC_MINOR__ >= 95)
#define BestCModeIDTags(...) ICyberGfx->BestCModeIDTags(## vargs) 
#endif
#define CModeRequestTagList(modeRequest, modeRequestTags) ICyberGfx->CModeRequestTagList((modeRequest), (modeRequestTags)) 
#if (defined(__STDC_VERSION__) && __STDC_VERSION__ >= 199901L) || (__GNUC__ >= 3)
#define CModeRequestTags(...) ICyberGfx->CModeRequestTags(__VA_ARGS__) 
#elif (__GNUC__ == 2 && __GNUC_MINOR__ >= 95)
#define CModeRequestTags(vargs...) ICyberGfx->CModeRequestTags(## vargs) 
#endif
#define AllocCModeListTagList(modeListTags) ICyberGfx->AllocCModeListTagList((modeListTags)) 
#if (defined(__STDC_VERSION__) && __STDC_VERSION__ >= 199901L) || (__GNUC__ >= 3)
#define AllocCModeListTags(...) ICyberGfx->AllocCModeListTags(__VA_ARGS__) 
#elif (__GNUC__ == 2 && __GNUC_MINOR__ >= 95)
#define AllocCModeListTags(...) ICyberGfx->AllocCModeListTags(## vargs) 
#endif
#define FreeCModeList(modeList) ICyberGfx->FreeCModeList((modeList)) 
#define ScalePixelArray(srcRect, srcW, srcH, srcMod, rp, destX, destY, destW, destH, srcFormat) ICyberGfx->ScalePixelArray((srcRect), (srcW), (srcH), (srcMod), (rp), (destX), (destY), (destW), (destH), (srcFormat)) 
#define GetCyberMapAttr(cyberGfxBitmap, cyberAttrTag) ICyberGfx->GetCyberMapAttr((cyberGfxBitmap), (cyberAttrTag)) 
#define GetCyberIDAttr(cyberIDAttr, cyberDisplayModeID) ICyberGfx->GetCyberIDAttr((cyberIDAttr), (cyberDisplayModeID)) 
#define ReadRGBPixel(rp, x, y) ICyberGfx->ReadRGBPixel((rp), (x), (y)) 
#define WriteRGBPixel(rp, x, y, argb) ICyberGfx->WriteRGBPixel((rp), (x), (y), (argb)) 
#define ReadPixelArray(destRect, destX, destY, destMod, rp, srcX, srcY, sizeX, sizeY, destFormat) ICyberGfx->ReadPixelArray((destRect), (destX), (destY), (destMod), (rp), (srcX), (srcY), (sizeX), (sizeY), (destFormat)) 
#define WritePixelArray(srcRect, srcX, srcY, srcMod, rp, destX, destY, sizeX, sizeY, srcFormat) ICyberGfx->WritePixelArray((srcRect), (srcX), (srcY), (srcMod), (rp), (destX), (destY), (sizeX), (sizeY), (srcFormat)) 
#define MovePixelArray(srcX, srcY, rp, destX, destY, sizeX, sizeY) ICyberGfx->MovePixelArray((srcX), (srcY), (rp), (destX), (destY), (sizeX), (sizeY)) 
#define InvertPixelArray(rp, destX, destY, sizeX, sizeY) ICyberGfx->InvertPixelArray((rp), (destX), (destY), (sizeX), (sizeY)) 
#define FillPixelArray(rp, destX, destY, sizeX, sizeY, aRGB) ICyberGfx->FillPixelArray((rp), (destX), (destY), (sizeX), (sizeY), (aRGB)) 
#define DoCDrawMethodTagList(hook, rp, tagList) ICyberGfx->DoCDrawMethodTagList((hook), (rp), (tagList)) 
#if (defined(__STDC_VERSION__) && __STDC_VERSION__ >= 199901L) || (__GNUC__ >= 3)
#define DoCDrawMethodTags(hook, ...) ICyberGfx->DoCDrawMethodTags((hook), __VA_ARGS__) 
#elif (__GNUC__ == 2 && __GNUC_MINOR__ >= 95)
#define DoCDrawMethodTags(hook, vargs...) ICyberGfx->DoCDrawMethodTags(hook, ## vargs) 
#endif
#define CVideoCtrlTagList(viewPort, tagList) ICyberGfx->CVideoCtrlTagList((viewPort), (tagList)) 
#if (defined(__STDC_VERSION__) && __STDC_VERSION__ >= 199901L) || (__GNUC__ >= 3)
#define CVideoCtrlTags(...) ICyberGfx->CVideoCtrlTags(__VA_ARGS__) 
#elif (__GNUC__ == 2 && __GNUC_MINOR__ >= 95)
#define CVideoCtrlTags(vargs...) ICyberGfx->CVideoCtrlTags(## vargs) 
#endif
#define LockBitMapTagList(bitMap, tagList) ICyberGfx->LockBitMapTagList((bitMap), (tagList)) 
#if (defined(__STDC_VERSION__) && __STDC_VERSION__ >= 199901L) || (__GNUC__ >= 3)
#define LockBitMapTags(...) ICyberGfx->LockBitMapTags(__VA_ARGS__) 
#elif (__GNUC__ == 2 && __GNUC_MINOR__ >= 95)
#define LockBitMapTags(vargs...) ICyberGfx->LockBitMapTags(## vargs) 
#endif
#define UnLockBitMap(handle) ICyberGfx->UnLockBitMap((handle)) 
#define UnLockBitMapTagList(handle, tagList) ICyberGfx->UnLockBitMapTagList((handle), (tagList)) 
#if (defined(__STDC_VERSION__) && __STDC_VERSION__ >= 199901L) || (__GNUC__ >= 3)
#define UnLockBitMapTags(...) ICyberGfx->UnLockBitMapTags(__VA_ARGS__) 
#elif (__GNUC__ == 2 && __GNUC_MINOR__ >= 95)
#define UnLockBitMapTags(vargs...) ICyberGfx->UnLockBitMapTags(## vargs) 
#endif
#define ExtractColor(rp, bitMap, colour, srcX, srcY, width, height) ICyberGfx->ExtractColor((rp), (bitMap), (colour), (srcX), (srcY), (width), (height)) 
#define WriteLUTPixelArray(srcRect, srcX, srcY, srcMod, rp, colorTab, destX, destY, sizeX, sizeY, cTFormat) ICyberGfx->WriteLUTPixelArray((srcRect), (srcX), (srcY), (srcMod), (rp), (colorTab), (destX), (destY), (sizeX), (sizeY), (cTFormat)) 
#define WritePixelArrayAlpha(srcRect, srcX, srcY, srcMod, rp, destX, destY, sizeX, sizeY, globalAlpha) ICyberGfx->WritePixelArrayAlpha((srcRect), (srcX), (srcY), (srcMod), (rp), (destX), (destY), (sizeX), (sizeY), (globalAlpha)) 
#define BltTemplateAlpha(source, xSrc, srcMod, destRP, xDest, yDest, xSize, ySize) ICyberGfx->BltTemplateAlpha((source), (xSrc), (srcMod), (destRP), (xDest), (yDest), (xSize), (ySize)) 
#define ProcessPixelArray(rp, destX, destY, sizeX, sizeY, operation, value, taglist) ICyberGfx->ProcessPixelArray((rp), (destX), (destY), (sizeX), (sizeY), (operation), (value), (taglist)) 
#if (defined(__STDC_VERSION__) && __STDC_VERSION__ >= 199901L) || (__GNUC__ >= 3)
#define ProcessPixelArrayTags(rp, destX, destY, sizeX, sizeY, operation, ...) ICyberGfx->ProcessPixelArrayTags((rp), (destX), (destY), (sizeX), (sizeY), (operation), __VA_ARGS__) 
#elif (__GNUC__ == 2 && __GNUC_MINOR__ >= 95)
#define ProcessPixelArrayTags(rp, destX, destY, sizeX, sizeY, operation, vargs...) ICyberGfx->ProcessPixelArrayTags(rp, destX, destY, sizeX, sizeY, operation, ## vargs) 
#endif
#define BltBitMapAlpha(srcBitMap, srcX, srcY, destBitMap, destX, destY, sizeX, sizeY, taglist) ICyberGfx->BltBitMapAlpha((srcBitMap), (srcX), (srcY), (destBitMap), (destX), (destY), (sizeX), (sizeY), (taglist)) 
#define BltBitMapRastPortAlpha(srcBitMap, srcX, srcY, destRP, destX, destY, sizeX, sizeY, taglist) ICyberGfx->BltBitMapRastPortAlpha((srcBitMap), (srcX), (srcY), (destRP), (destX), (destY), (sizeX), (sizeY), (taglist)) 
#define ScalePixelArrayAlpha(srcRect, srcW, srcH, srcMod, rp, destX, destY, destW, destH, globalAlpha) ICyberGfx->ScalePixelArrayAlpha((srcRect), (srcW), (srcH), (srcMod), (rp), (destX), (destY), (destW), (destH), (globalAlpha)) 

#endif /* INLINE4_CYBERGRAPHICS_H */
